{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar baseURL = 'https://jsonplaceholder.typicode.com/posts';\nimport axios from \"axios\";\nexport var getPosts = function getPosts() {\n  var posts, response;\n  return _regeneratorRuntime.async(function getPosts$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          posts = [];\n          _context.prev = 1;\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(axios.get(baseURL));\n\n        case 4:\n          response = _context.sent;\n          posts = response.data;\n          _context.next = 11;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](1);\n          console.log(_context.t0);\n\n        case 11:\n          console.log('after resolve');\n          return _context.abrupt(\"return\", {\n            type: 'POSTS_LIST',\n            payload: posts\n          });\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[1, 8]], Promise);\n};\nexport var getPostDetails = function getPostDetails(id) {\n  var post, response;\n  return _regeneratorRuntime.async(function getPostDetails$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          post = {};\n          _context2.prev = 1;\n          _context2.next = 4;\n          return _regeneratorRuntime.awrap(axios.get(baseURL + \"/\" + id));\n\n        case 4:\n          response = _context2.sent;\n          post = response.data;\n          _context2.next = 11;\n          break;\n\n        case 8:\n          _context2.prev = 8;\n          _context2.t0 = _context2[\"catch\"](1);\n          console.log(_context2.t0);\n\n        case 11:\n          console.log('after resolve');\n          return _context2.abrupt(\"return\", {\n            type: 'POSTS_DETAILS',\n            payload: post\n          });\n\n        case 13:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[1, 8]], Promise);\n};\nexport var clearDetails = function clearDetails() {\n  return {\n    type: 'CLEAR_DETAILS'\n  };\n};","map":{"version":3,"sources":["C:/Users/mostafa/Desktop/ReactNative-D3-task/src/actions/index.js"],"names":["baseURL","axios","getPosts","posts","get","response","data","console","log","type","payload","getPostDetails","id","post","clearDetails"],"mappings":";AAAA,IAAMA,OAAO,GAAG,4CAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAQ,IAAOC,QAAQ,GAAG,SAAXA,QAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAClBC,UAAAA,KADkB,GACV,EADU;AAAA;AAAA;AAAA,2CAGKF,KAAK,CAACG,GAAN,CAAUJ,OAAV,CAHL;;AAAA;AAGZK,UAAAA,QAHY;AAIlBF,UAAAA,KAAK,GAAGE,QAAQ,CAACC,IAAjB;AAJkB;AAAA;;AAAA;AAAA;AAAA;AAMlBC,UAAAA,OAAO,CAACC,GAAR;;AANkB;AAQtBD,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AARsB,2CASf;AACHC,YAAAA,IAAI,EAAC,YADF;AAEHC,YAAAA,OAAO,EAACP;AAFL,WATe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAlB;AAgBR,OAAO,IAAMQ,cAAc,GAAG,SAAjBA,cAAiB,CAAOC,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACtBC,UAAAA,IADsB,GACf,EADe;AAAA;AAAA;AAAA,2CAGCZ,KAAK,CAACG,GAAN,CAAaJ,OAAb,SAAwBY,EAAxB,CAHD;;AAAA;AAGhBP,UAAAA,QAHgB;AAIvBQ,UAAAA,IAAI,GAAGR,QAAQ,CAACC,IAAhB;AAJuB;AAAA;;AAAA;AAAA;AAAA;AAMtBC,UAAAA,OAAO,CAACC,GAAR;;AANsB;AAQ1BD,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AAR0B,4CASnB;AACHC,YAAAA,IAAI,EAAC,eADF;AAEHC,YAAAA,OAAO,EAACG;AAFL,WATmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;AAeP,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAI;AAC5B,SAAO;AACHL,IAAAA,IAAI,EAAC;AADF,GAAP;AAGH,CAJM","sourcesContent":["const baseURL = 'https://jsonplaceholder.typicode.com/posts';\r\nimport axios from \"axios\";\r\n\r\nexport  const  getPosts = async ()=>{\r\n    let posts = []\r\n    try {\r\n        const response = await axios.get(baseURL)\r\n        posts = response.data;\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n    console.log('after resolve')\r\n    return {\r\n        type:'POSTS_LIST',\r\n        payload:posts \r\n    }\r\n\r\n}\r\n\r\nexport const getPostDetails = async (id)=>{\r\n    let post = {}\r\n    try {\r\n        const response = await axios.get(`${baseURL}/${id}`)\r\n       post = response.data;\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n    console.log('after resolve')\r\n    return {\r\n        type:'POSTS_DETAILS',\r\n        payload:post \r\n    }\r\n}\r\n\r\nexport const clearDetails = ()=>{\r\n    return {\r\n        type:'CLEAR_DETAILS'\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}